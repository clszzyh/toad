on: push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [22.3]
        elixir: [1.10.2]

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: exz_dev
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: actions/setup-node@v1
        with:
          node-version: 13.11.0

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}


      - uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install elixir deps
        run: mix deps.get

      - name: Install js deps
        run: npm i --prefix assets

      - run: mix format --check-formatted
      - run: mix compile --warnings-as-errors
      - run: mix test
        env:
          MIX_ENV: test

      # - name: Prepare release
      #   run: |
      #     mix compile
      #     mix phx.digest
      #     mix release
      #   env:
      #     MIX_ENV: prod
      # - name: Publish release
      #   uses: moomerman/actions/bin/ghr@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     RELEASE_PATH: _build/prod/rel
      #     APPLICATION: <<APP NAME>>
